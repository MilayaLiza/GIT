Домашняя работа №2
от 15.01.2022
Выполнила: Ширявскова Е.А


    * * * * *JSON* * * * *
 1. Создать внешний репозиторий c названием JSON. 
Ответ: Заходим в свой "Github" на главную страницу.
Выбираем вкладку "Repositories", нажимаем кнопку "NEW" и создаем новый репозиторий. 


 2. Клонировать репозиторий JSON на локальный компьютер.
Ответ: Копируем ссылку своего репозитория в "Github".
Заходим в ранее созданную папку на ПК и открываем "Git Bush Here". 
В консоле, в командную строку вводим  (git clone https://github.com/MilayaLiza/JSON.git)
Появилась информация о выполненной команде:


 3. Внутри локального JSON создать файл “new.json”.
Ответ: Заходим в папку "JSON" - cd json
Создаем файл - (touch new.json)
Файл создан.


 3. Добавить файл под гит.
Ответ: Вводим "git status" 
Данной командой добавляем файл в "GIT" - (git add new.json)
Проверяем добавление (git status)
Файл добавлен.


 3. Закоммитить файл.
Ответ: Вводим (git commit -m "создали файл new.json")
Файл закоммитен.


 4. Отправить файл на внешний GitHub репозиторий.
Ответ: Вводим (git push) 
Файл отправлен на внешний GitHub.


 5. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
Ответ: Вводим (vim new.json) - открываем файл для редактирования.
Вводим даные.
1) (ФИО) Ширявскова Елизавета Анатольевна.
2) (Возраст) 37 лет.
3) (Домашние животные) Собака Черри, кошка Мила, кошка Сири.
4) (Желаемая будущfя зарплата) 200 000.
Сохраняем.
Проверяем.
(git status)
Добавляем изминения в файл
(git add new.json)


 6. Отправить изменения на внешний репозиторий.
Ответ: Вводим (git commit -m "добавили данные в файл new.json")
(git push)
Изменения отправились.

 
 7. Создать файл preferences.json
Ответ:(touch preferences.json)
Файл создан.


 8. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
Вводим (vim preferences.json) - открываем файл для редактирования.
Вводим даные.
Сохраняем.


 9. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
touch skills.json
Вводим (vim sklls.txt) - открываем файл для редактирования.
Вводим даные.
Сохраняем.


 10. Отправить сразу 2 файла на внешний репозиторий.
Ответ: Git status
git add preferences.json skills.json | git commit -m "сделали коммит для двух файлов"
Git push


 11. На веб интерфейсе создать файл bug_report.json.
Ответ: Файл создан.


 12. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ответ: Изменения сохранены.


 13. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Ответ: Данные добавленны.

 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ответ: Изменения сохранены.


 15. Синхронизировать внешний и локальный репозиторий JSON
Ответ: $ git fetch
$ git pull
Данные синхронизированны.


      * * * * *XML* * * * *
 1. Создать внешний репозиторий c названием XML.
Ответ: Заходим в свой "Github" на главную страницу.
Выбираем вкладку "Repositories", нажимаем кнопку "NEW" и создаем новый репозиторий. 


 2. Клонировать репозиторий XML на локальный компьютер.
Ответ: Копируем ссылку своего репозитория в "Github".
Заходим в ранее созданную папку на ПК и открываем "Git Bush Here". 
В консоле, в командную строку вводим  (git clone https://github.com/MilayaLiza/XML.git)
Появилась информация о выполненной команде


 3. Внутри локального XML создать файл “new.xml”.
Ответ: Заходим в папку "XML" - cd xml
Создаем файл - (touch new.xml)
Файл создан.

 4. Добавить файл под гит.
Ответ: Вводим "git status" 
Данной командой добавляем файл в "GIT" - (git add new.xml)
Проверяем добавление (git status)
Файл добавлен.

 5. Закоммитить файл.
Ответ: Вводим (git commit -m "создали файл new.xml")
Файл закоммитен.


 6. Отправить файл на внешний GitHub репозиторий.
Ответ: Вводим (git push) 
Файл отправлен на внешний GitHub.


 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
Ответ: Вводим (vim new.txt) - открываем файл для редактирования.
Вводим даные.
Сохраняем.
Проверяем.
(git status)
Добавляем изминения в файл
(git add new.xml)


 8. Отправить изменения на внешний репозиторий.
Ответ: (git commit -m "добавили данные new.xml")
(git push)
Изменения отправлены.


 9. Создать файл preferences.xml
Ответ:(touch preferences.xml)
Файл создан.


 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
Вводим (vim preferences.xml) - открываем файл для редактирования.
Вводим даные.
Сохраняем.


 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
Ответ: (touch skills.xml)
Вводим (vim skills.xml) - открываем файл для редактирования.
Вводим даные.
Сохраняем.


12. Сделать коммит в одну строку.
Ответ:  git add preferences.xml skills.xml | git commit -m "сделали коммит для двух файлов"
Коммит в одну строчку создан.


 13. Отправить сразу 2 файла на внешний репозиторий.
Ответ: git push
Файлы добавились на внешний репозиторий.


 14. На веб интерфейсе создать файл bug_report.xml.
Ответ: Файл создан.


 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ответ: Изменения сохранены


 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Ответ: Данныедобавленны.


 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ответ: Данные сохранены.

 18. Синхронизировать внешний и локальный репозиторий XML
Ответ: $ git fetch
$ git pull
Данные синхронизированны.


     * * * * *TXT* * * * *
 1. Создать внешний репозиторий c названием TXT.
Ответ: Заходим в свой "Github" на главную страницу.
Выбираем вкладку "Repositories", нажимаем кнопку "NEW" и создаем новый репозиторий. 


 2. Клонировать репозиторий TXT на локальный компьютер.
Ответ: Копируем ссылку своего репозитория в "Github".
Открываем (Git Bush)
Создаем папку (mkdir git_test)  и заходим в нее.
В консоле, в командную строку вводим (git clone https://github.com/MilayaLiza/TXT.git)
Появилась информация о выполненной команде: 


 3. Внутри локального TXT создать файл “new.txt”.
Ответ: Заходим в папку "TXT" - cd txt
Создаем файл - (touch new.txt)
Файл создан.


 4. Добавить файл под гит.
Ответ: Вводим "git status" 
Данной командой добавляем файл в "GIT" - (git add new.txt)
Проверяем добавление (git status)
Файл добавлен.


 5. Закоммитить файл.
Ответ: Вводим (git commit -m "создали файл new.txt")
Файл закоммитен.


 6. Отправить файл на внешний GitHub репозиторий.
Ответ: Вводим (git push) 
Файл отправлен на внешний GitHub.


 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
Ответ: Вводим (vim new.txt) - открываем файл для редактирования.
Вводим даные.
1) (ФИО) Ширявскова Елизавета Анатольевна.
2) (Возраст) 37 лет.
3) (Домашние животные) Собака Черри, кошка Мила, кошка Сири.
4) (Желаемая будущя зарплата) 100 000.
Сохраняем.
Проверяем.
(git status)
Добавляем изминения в файл
(git add new.txt)


 8. Отправить изменения на внешний репозиторий.
Ответ: (git commit -m "добавили данные new.txt")
(git push)
Изменения отправлены.


 9. Создать файл preferences.txt
Ответ:(touch preferences.txt)
Файл создан.


 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
Вводим (vim preferences.txt) - открываем файл для редактирования.
Вводим даные.
Сохраняем.


 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch skills.txt
Вводим (vim skills.txt) - открываем файл для редактирования.
Вводим даные.
Сохраняем.



 12. Сделать коммит в одну строку.
Ответ:  git add preferences.txt skills.txt | git commit -m "сделали коммит для двух файлов"
Коммит в одну строчку создан.


 13. Отправить сразу 2 файла на внешний репозиторий.
Ответ: git push
Файлы добавились на внешний репозиторий.


 14. На веб интерфейсе создать файл bug_report.txt.
Ответ: Файл создан.


 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ответ: Файл сохранен.


 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Ответ. Данные добавлены.


 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Ответ: Данные сохранены.


 18. Синхронизировать внешний и локальный репозиторий TXT
Ответ: $ git fetch
$ git pull
Данные синхронизированны.

